// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  user_id  String  @id @unique @default(uuid())
  order    Order[]
  order_id String
   hotel    Hotel?
  fullName String 
  gender   String 
  email String @unique
  password String
  username String
  telephone String
  

}

model Order {
  order_id             String    @id @unique @default(uuid())
  customer             User?     @relation(fields: [customer_id], references: [user_id])
  customer_id          String
  date                 DateTime
  deliveryAddress      Address   @relation(fields: [address_id], references: [address_id])
  address_id           String
  product              MenuItem? @relation(fields: [product_id], references: [menuItem_id])
  product_id           Int       @unique
  expectedDeliveryTime DateTime
  price                Float
  review               String
  rating               Float
}

// model CoffeeProduct {
//   coffee_id          String @id @unique @default(uuid())
//   hotel              Hotel  @relation(fields: [hotel_id], references: [hotel_id])
//   order              Order?
//   order_id           String @unique
//   hotel_id           Int
//   name               String
//   price              Float
//   quantity_available Int
//   type               String
// }

model Hotel {
  hotel_id            Int      @id @unique @default(autoincrement())
  admin               User     @relation(fields: [admin_id], references: [user_id])
  admin_id            String   @unique
  name                String
  menu                Menu?
  menu_id             Int      @unique
  address             Address?
  rating              Float
  lastMonthOrders     Int
  ThisWeekOrders      Int
  startingWorkingTime DateTime
  endingWorkingTime   DateTime
  image               String
}

model Address {
  address_id String  @id @default(uuid())
  hotel      Hotel   @relation(fields: [hotel_id], references: [hotel_id])
  order      Order[]
  hotel_id   Int     @unique
  latitude   Float
  longitude  Float
  street     String
  district   String
  sector     String
  cell       String
  village    String
}

model Menu {
  menu_id        Int           @id @unique @default(autoincrement())
  hotel          Hotel?        @relation(fields: [hotel_id], references: [hotel_id])
  hotel_id       Int           @unique
  items          MenuItem[]
  categories     Category[]
}

model MenuItem {
  menuItem_id Int    @id @unique @default(autoincrement())
  name        String
  type        String

  Menu               Menu?       @relation(fields: [menu_id], references: [menu_id])
  menu_id            Int?
  price              Float
  category           Category    @relation(fields: [category_id], references: [category_id])
  category_id        Int
  quantity_available Int
  description        String
  image              String?
  Order              Order?
}

model Category {
  category_id   Int           @id @unique @default(autoincrement())
  subcategories String[]
  menu          Menu[]
  menuItem      MenuItem[]
  description   String
  image         String?
  name String
}


